(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{155:function(t,e,i){"use strict";i.r(e);var l=i(0),n=Object(l.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[i("ul",[i("li",[i("p",[t._v("接口统一使用Http的RestApi风格，禁止请求类型如功能不对应。")])]),t._v(" "),i("li",[i("p",[t._v("web接口统一放在"),i("code",[t._v("api/")]),t._v("目录下，方便统一进行拦截处理")])]),t._v(" "),i("li",[i("p",[t._v("当前接口列表对应为项目开发第一阶段的接口需求")])]),t._v(" "),i("li",[i("p",[t._v("因为对于后端的实现不是很清除，所以传入参数并不是很详细")])]),t._v(" "),i("li",[i("p",[t._v("因为对于数据库中的字段名称不熟悉，所以所有的属性名称只是暂定，后端可以根据实际情况进行修改")])]),t._v(" "),i("li",[i("p",[t._v("当接口出错时，后端统一返回错误类型，前端进行展示(错误类型的规范是否需要商定下？)")])])])])}],!1,null,null,null);n.options.__file="README.md";e.default=n.exports}}]);